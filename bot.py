from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from random import randint
bot = Bot(token='')
dp = Dispatcher(bot)

"""–ö–Ω–æ–ø–∫–∏"""
b1 = KeyboardButton("/–ü–ì–£–¢–ò")
b2 = KeyboardButton("/–∞–≤—Ç–æ—Ä—ã")
b3 = KeyboardButton("/—Å—Å—ã–ª–∫–∏")
b4 = KeyboardButton('/—á–∏—Å–ª–æ')
b5 = KeyboardButton('/–∫–æ–º–∞–Ω–¥—ã')
kb_client = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
kb_client.insert(b5).add(b4).add(b3).add(b2).insert(b1)

"""–ö–Ω–æ–ø–∫–∞ —Å—Å—ã–ª–∫–∞"""
urlkb = InlineKeyboardMarkup(row_width=1)
urlButton = InlineKeyboardButton(text='VK1 üíô', url="https://vk.com/rustamzar")
urlButton2 = InlineKeyboardButton(text='VK2 üíô', url="https://vk.com/nojvspine_orig")
urlkb.add(urlButton, urlButton2)

coms = ['start', '—Å—Ç–∞—Ä—Ç', 'links', '—Å—Å—ã–ª–∫–∏', '–ü–ì–£–¢–ò', '–ø–≥—É—Ç–∏', '–∞–≤—Ç–æ—Ä', '–∞–≤—Ç–æ—Ä—ã', '—á–∏—Å–ª–æ']
s = ('\n'.join(f'/{i}' for i in coms))
replys = {"/start" : ['–ë–∑–∑–∑, –ø—Ä–∏–≤–µ—Ç üêù\n–ù–∞–ø–∏—à–∏ –º–Ω–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã —è –µ–≥–æ –ø–æ–≤—Ç–æ—Ä–∏–ª.\n–ò–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–æ–º–∞–Ω–¥–∞–º–∏.', kb_client], 
    '/—Å—Ç–∞—Ä—Ç' : ['–ë–∑–∑–∑, –ø—Ä–∏–≤–µ—Ç üêù\n–ù–∞–ø–∏—à–∏ –º–Ω–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã —è –µ–≥–æ –ø–æ–≤—Ç–æ—Ä–∏–ª.\n–ò–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–æ–º–∞–Ω–¥–∞–º–∏.', kb_client], 
    "/links" : ["–°—Å—ã–ª–∫–∏ –Ω–∞ –≤–∫:", urlkb], 
    "/—Å—Å—ã–ª–∫–∏" : ["–°—Å—ã–ª–∫–∏ –Ω–∞ –≤–∫:", urlkb], 
    "/–ü–ì–£–¢–ò" : ['–ö–æ—Ä–ø—É—Å ‚Ññ1: —É–ª. –õ. –¢–æ–ª—Å—Ç–æ–≥–æ, 23 üéì\n–ö–æ—Ä–ø—É—Å ‚Ññ2: –ú–æ—Å–∫–æ–≤—Å–∫–æ–µ —à–æ—Å—Å–µ, 77 üéì', None],
    '/–ø–≥—É—Ç–∏' : ['–ö–æ—Ä–ø—É—Å ‚Ññ1: —É–ª. –õ. –¢–æ–ª—Å—Ç–æ–≥–æ, 23 üéì\n–ö–æ—Ä–ø—É—Å ‚Ññ2: –ú–æ—Å–∫–æ–≤—Å–∫–æ–µ —à–æ—Å—Å–µ, 77 üéì', None], 
    "/–∞–≤—Ç–æ—Ä" : ['–ê–Ω—Ç–æ–Ω ü§ù —Å–æ—Å–µ–¥ –ê–Ω—Ç–æ–Ω–∞', None],
    '/–∞–≤—Ç–æ—Ä—ã' : ['–ê–Ω—Ç–æ–Ω ü§ù —Å–æ—Å–µ–¥ –ê–Ω—Ç–æ–Ω–∞', None],
    '/—á–∏—Å–ª–æ' : [f'–í–æ—Ç –º–æ–µ —á–∏—Å–ª–æ: {randint(1, 100)} üé≤', None],
    '/–∫–æ–º–∞–Ω–¥—ã' : [f'–í–æ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:\n{s}', None]}

sticks = {"/start" : 'CAACAgIAAxkBAAEEWZ5iSCWIz5EjcYDtab0E93LIr5jMMwACpwQAAs9fiwfuK3V_8IhGWCME',
    '/—Å—Ç–∞—Ä—Ç' : 'CAACAgIAAxkBAAEEWZ5iSCWIz5EjcYDtab0E93LIr5jMMwACpwQAAs9fiwfuK3V_8IhGWCME',
    '/links' : 'CAACAgIAAxkBAAEEWapiSC6nft-yA_MnXwoTdzMzryzZ-wACkwQAAs9fiwfF5YDTXLzqRCME',
    '/—Å—Å—ã–ª–∫–∏' : 'CAACAgIAAxkBAAEEWapiSC6nft-yA_MnXwoTdzMzryzZ-wACkwQAAs9fiwfF5YDTXLzqRCME',
    '/–ü–ì–£–¢–ò' : 'CAACAgIAAxkBAAEEWaxiSC7R5M_tzbpeEXVjf0dXNj-nugACjwQAAs9fiwcjGSIznEAhkCME',
    '/–ø–≥—É—Ç–∏' : 'CAACAgIAAxkBAAEEWaxiSC7R5M_tzbpeEXVjf0dXNj-nugACjwQAAs9fiwcjGSIznEAhkCME',
    '/–∞–≤—Ç–æ—Ä' : 'CAACAgIAAxkBAAEEWahiSC55YSJDahZWYvkX4hcipXR5kAACpgQAAs9fiwcyOrb59JTzZyME',
    '/–∞–≤—Ç–æ—Ä—ã' : 'CAACAgIAAxkBAAEEWahiSC55YSJDahZWYvkX4hcipXR5kAACpgQAAs9fiwcyOrb59JTzZyME',
    '/—á–∏—Å–ª–æ' : 'CAACAgIAAxkBAAEEWbdiSDD-lFBuq5HVMog2BDE7u5CkPAACmwQAAs9fiwfgYldEfWv7oSME'}
""""–ö–æ–º–∞–Ω–¥—ã"""
@dp.message_handler(commands=coms)
async def command_handler(message : types.Message):
    replys['/—á–∏—Å–ª–æ'] = [f'–í–æ—Ç –º–æ–µ —á–∏—Å–ª–æ: {randint(1, 100)} üé≤', None]
    if message.chat.id != None:
        await bot.send_message(message.chat.id, replys[message.text][0], reply_markup=replys[message.text][1])
        await bot.send_sticker(message.chat.id, rf'{sticks[message.text]}')
    elif message.from_user.id != None:
        await bot.send_message(message.from_user.id, replys[message.text][0], reply_markup=replys[message.text][1])
        await bot.send_sticker(message.from_user.id, rf'{sticks[message.text]}')

@dp.message_handler(commands=['–∫–æ–º–∞–Ω–¥—ã'])
async def commands(message : types.Message):
    if message.chat.id != None:
        await bot.send_message(message.chat.id, replys[message.text][0], reply_markup=replys[message.text][1])
    elif message.from_user.id != None:
        await bot.send_message(message.from_user.id, replys[message.text][0], reply_markup=replys[message.text][1])

@dp.message_handler()
async def echo_send(message : types.Message):
    await message.reply(message.text)
    await bot.send_message(message.from_user.id,"üñäÔ∏è")

executor.start_polling(dp, skip_updates=True)
